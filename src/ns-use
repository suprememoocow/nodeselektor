##
## Persist the node-selektor configuration
## Usage:
##   `ns-use [--reinit-npm] [nodejs-install-dir]`
##    - reinit-npm delete the `node_modules` directory on mismatch
##    - nodejs-install-dir: node installation to check compatibility with
##

usage() {
  log_stderr $0 "[--reinit-npm] nodejs_installation_directory"
}

reinit_npm=false

while [[ $# -gt 0 ]]
do
  case "$1" in
      --reinit-npm)
      reinit_npm=true
      shift
      ;;
      --) # End of all options
  	  shift
  	  break;
      ;;
      -*) # Unknown option
      usage
  	  exit 1
  	  ;;
      *)  # No more options
  	  break
  	  ;;
  esac
done

if [[ "$#" != 1 ]]; then
  usage;
  exit 1;
fi

node_path=$1

if ! [[ -d "${node_path}" ]]; then
  log_stderr "${node_path} is not a directory"
  usage;
  exit 1;
fi

if ! [[ -e "${node_path}/bin/node" ]]; then
  log_stderr "${node_path}/bin/node is not executable"
  usage;
  exit 1;
fi

if ! package_root=$(find_package_root_path .); then
  log_stderr "Unable to locate package.json"
  exit 1;
fi

nodeselektor_config_file="${package_root}/.node-selektor"
if ! [[ -f "${nodeselektor_config_file}" ]]; then
  cat <<EOD > ${nodeselektor_config_file}
; nodeselektor configuration file
; do not check this into source control
; add it to .gitignore
EOD
fi

abs_node_path=$(get_abs_path "${node_path}")

write_ini_value "node_path" "${abs_node_path}"

if [[ ${reinit_npm} == "true" ]]; then
  if ! nodeselektor_init .; then
    log_stderr "Unable to init"
    exit 1
  fi

  if ! validate_modules_version; then
    rm -rf "${nodeselektor_root_path}/node_modules/"
    save_current_modules_version
  fi
fi
